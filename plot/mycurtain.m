% /////// mycurtain ///////
% tricksy function for selecting and reselecting and reselecting again if
% your picky the two points which make up your curtain.
% simply include c = mycurtain(c) within your myscroll or foor loop and hit
% c when you wish to change your curtain plot
%
% inputs
%   c = structure generated by fvcurtain
%   geofil = _geo.nc file
%
% optional inputs
%   spherical / true or false. if true converts degrees to radians
%   h_sheet = handels to axes (probably containing sheet plots) you wish to
%
% JN June 2012

function c = mycurtain(c,geofil,varargin)

% defaults
spherical = false;
h_sheet = [];

% variable arguments
for i = 1 : 2 : length(varargin)
    varargtyp{i} = varargin{i};
    varargval{i} = varargin{i+1};
    switch lower(varargtyp{i})
        case 'spherical'
            spherical = varargval{i};
            if ~islogical(spherical)
                error('expecting logical input for variable argument "sherical"')
            end
        case 'h_sheet'
            h_sheet = varargval{i};
            na = length(h_sheet);
            for aa = 1:na
                if ishandle(h_sheet)
                    hand = get(h_sheet(aa),'type');
                    switch hand
                        case 'axes'
                            continue
                        otherwise
                            error('h_sheet must be a handle to an axes')
                    end
                else
                    error('h_sheet must be an axes handle')
                end
            end
        otherwise
            error('unexpected variable argument type')
    end
end

f = c.f;
set(f,'windowkeypressfcn','set(gcbf,''Userdata'',get(gcbf,''CurrentCharacter''))')
set(f,'windowkeyreleasefcn','set(gcbf,''Userdata'','''')')

% give you a chance to hit the 'c' key
tic
while toc < 0.1
    key = get(f,'userdata');
    if ~isempty(key)
        switch key
            case 'c'
                continue
        end
    end
end

if ~isempty(key)
    switch key
        case 'c'
            [x_raw,y_raw] = ginput(2);
        otherwise
            return
    end
else
    return
end

% update the relavent fields in c for the next call of fvcurtain
if spherical
    x = x_raw * pi / 180;
    y = y_raw* pi / 180;
else
    x = x_raw;
    y = y_raw;
end

[curt_idx2, curt_coords, curt_chain] = fv_get_curtain_ids([x y],geofil);
c.idx2 = curt_idx2;
c.coords = curt_coords;
c.chain = curt_chain;
if isfield(c,'p')
    delete(c.p)
    c = rmfield(c,'p'); % next time fvcurtain is called the patch object will be redrawn
end

c.mycurtain = true;

% x-sections onto specified axes
if ~isempty(h_sheet)
    if isfield(c,'start')
        delete(c.start,c.line)
        c = rmfield(c,{'start';'line'});
    end
    na = length(h_sheet);
    for aa = 1:na
        set(f,'CurrentAxes',h_sheet(aa))
        set(h_sheet(aa),'NextPLot','add')
        c.line(aa) = line(x_raw,y_raw,'LineWidth',1,'color','r');
        c.start(aa) = plot(h_sheet(aa),x_raw(1),y_raw(1),'o','MarkerEdgeColor','r','MarkerSize',6);
    end
end